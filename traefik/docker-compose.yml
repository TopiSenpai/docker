version: '3.7'

services:
    traefik:
        image: traefik:latest
        container_name: traefik
        restart: unless-stopped
        env_file:
            - conf.env
        networks:
            - traefik
        ports:
            - 80:80
            - 443:443
        expose:
            - 8080
        volumes:
            - ./traefik.yml:/etc/traefik/traefik.yml
            - ./.data/letsencrypt/:/letsencrypt/
            - ./configs/:/configs/:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            traefik.enable: true
            traefik.http.routers.dashboard.rule: Host(`traefik.$PRIMARY_DOMAIN`)
            traefik.http.routers.dashboard.entrypoints: https
            traefik.http.routers.dashboard.middlewares: auth@docker
            traefik.http.middlewares.auth.basicauth.users: $TRAEFIK_AUTH
            traefik.http.routers.dashboard.service: api@internal
            traefik.http.middlewares.global-compress.compress: true
    errorpages:
        image: thoriogit/errorpage-service
        restart: unless-stopped
        networks:
            - traefik
        expose:
            - 80
        labels:
            traefik.enable: true
            traefik.http.routers.errorpages.rule: HostRegexp(`{host:.+}`)
            traefik.http.routers.errorpages.entrypoints: https
            traefik.http.routers.errorpages.priority: 1
            traefik.http.services.errorpages.loadbalancer.server.port: 80
            traefik.http.middlewares.global-errors.errors.status: 500-599
            traefik.http.middlewares.global-errors.errors.query: /_error/{status}
            traefik.http.middlewares.global-errors.errors.service: errorpages@docker

networks:
    traefik:
        name: traefik
